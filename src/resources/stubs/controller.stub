<?php

namespace DummyNamespace;

use Illuminate\Http\Request;
use Dlogon\TailwindAlerts\Facades\TailwindAlerts;
use Dlogon\QuickCrudForLaravel\Helpers\Search;
use DummySpaceModel;

class DummyClass extends Controller
{
    public $tableFields = DummyFields;

    /*
    [
        "label" => "tablefieldName",
        'label' => ["type" => "related", "field" =>"relationName.fieldNameOfRelatedModel"],
        'label' => ["type"=>"money", "field"=>'moneyOrDecimalField']
    ]
    */

    public $searchFields = [
            "created_at" => [
            "type" => "singleDate", // search by date
            "label" => "Creation date",
        ],
        /*
        "fieldName" =>[
            "type" => "text" // search by text
            "placeholder" => "my search"
        ]

        "customer_id" => [
                "type" => "related", // search by related model
                "elements" => $allCustomers, //<- this will populate a select dropdown
                "modelDisplay" => "name",
                "label" => "Cliente", <--what show to
                "value" => "id" <-- what find to
            ]
        */
    ];
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index($models = null)
    {
        $models = $models ?? DummyModel::orderBy("id")->paginate(10);
        $fields = $this->tableFields;
        $searchFields = $this->searchFields;
        return view(
            "crudable.Dummyfolder.index",
            [
                "models" => $models,
                "fields" => $fields,
                "searchFields" => $searchFields
            ]
        );
    }

    public function search(Request $request)
    {
        $models = DummyModel::query();
        if ($request->has('q'))
            $models = Search::searchByQueryParams(new DummyModel, $request)->get();
        return $this->index($models);
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\DummyModel  $model
     * @return \Illuminate\Http\Response
     */
    public function show(DummyModel $Dummyfolder)
    {
        $fields = $this->tableFields;

        return view(
            "crudable.Dummyfolder.show",
            [
                "model" => $Dummyfolder,
                "fields" => $fields
            ]
        );
    }

        /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Customer  $customer
     * @return \Illuminate\Http\Response
     */
    public function destroy(DummyModel $Dummyfolder)
    {
        $Dummyfolder->delete();
        TailwindAlerts::addBottomToastMessage("Deleted", TailwindAlerts::ERROR);
        return redirect()->route("Dummyfolders.index");
    }
}
